#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x65420a6dc420 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x65420a6a1490 .scope module, "instruction_memory_tb" "instruction_memory_tb" 3 5;
 .timescale -9 -12;
P_0x65420a6a1620 .param/l "CLOCK_PERIOD" 1 3 22, +C4<00000000000000000000000000001010>;
v0x65420a6d2e60_0 .var "clk_tb", 0 0;
v0x65420a6d4060_0 .net "instruction_out_tb", 31 0, v0x65420a6d0810_0;  1 drivers
v0x65420a6d4240_0 .var "read_addr_tb", 31 0;
S_0x65420a6a16c0 .scope module, "dut" "instruction_memory" 3 15, 4 15 0, S_0x65420a6a1490;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 32 "read_addr_in";
    .port_info 2 /OUTPUT 32 "instruction_out";
P_0x65420a6c81b0 .param/l "ADDR_WIDTH" 1 4 25, +C4<00000000000000000000000000001010>;
P_0x65420a6c81f0 .param/l "MEM_SIZE_WORDS" 1 4 24, +C4<00000000000000000000010000000000>;
v0x65420a6ce560_0 .net "clk", 0 0, v0x65420a6d2e60_0;  1 drivers
v0x65420a6d0810_0 .var "instruction_out", 31 0;
v0x65420a6d09f0 .array "memory", 1023 0, 31 0;
v0x65420a6d27e0_0 .net "read_addr_in", 31 0, v0x65420a6d4240_0;  1 drivers
E_0x65420a6daaf0 .event posedge, v0x65420a6ce560_0;
    .scope S_0x65420a6a16c0;
T_0 ;
    %vpi_call/w 4 32 "$display", "IMEM: Initializing instruction memory from program.hex..." {0 0 0};
    %vpi_call/w 4 34 "$readmemh", "program.hex", v0x65420a6d09f0 {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x65420a6a16c0;
T_1 ;
    %wait E_0x65420a6daaf0;
    %load/vec4 v0x65420a6d27e0_0;
    %parti/s 8, 2, 3;
    %pad/u 12;
    %ix/vec4 4;
    %load/vec4a v0x65420a6d09f0, 4;
    %assign/vec4 v0x65420a6d0810_0, 0;
    %jmp T_1;
    .thread T_1;
    .scope S_0x65420a6a1490;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x65420a6d2e60_0, 0, 1;
    %delay 5000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x65420a6d2e60_0, 0, 1;
    %delay 5000, 0;
    %jmp T_2;
    .thread T_2;
    .scope S_0x65420a6a1490;
T_3 ;
    %vpi_call/w 3 30 "$dumpfile", "imem_waveforms.vcd" {0 0 0};
    %vpi_call/w 3 31 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x65420a6a1490 {0 0 0};
    %vpi_call/w 3 33 "$display", "Starting Instruction Memory Testbench..." {0 0 0};
    %vpi_call/w 3 34 "$display", "========================================" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x65420a6d2e60_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %pushi/vec4 2, 0, 32;
T_3.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_3.1, 5;
    %jmp/1 T_3.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x65420a6daaf0;
    %jmp T_3.0;
T_3.1 ;
    %pop/vec4 1;
    %vpi_call/w 3 44 "$display", "[%0t ns] Test: Reading from address 0x00", $time {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %wait E_0x65420a6daaf0;
    %wait E_0x65420a6daaf0;
    %vpi_call/w 3 49 "$display", "  Read from addr %h. Got instruction: %h. Expected: 12345678", v0x65420a6d4240_0, v0x65420a6d4060_0 {0 0 0};
    %load/vec4 v0x65420a6d4060_0;
    %cmpi/ne 305419896, 0, 32;
    %jmp/0xz  T_3.2, 6;
    %vpi_call/w 3 50 "$error", "FAIL: Address 0x00 mismatch." {0 0 0};
    %jmp T_3.3;
T_3.2 ;
    %vpi_call/w 3 51 "$display", "PASS: Address 0x00 correct." {0 0 0};
T_3.3 ;
    %vpi_call/w 3 52 "$display", "------------------------------------" {0 0 0};
    %vpi_call/w 3 55 "$display", "[%0t ns] Test: Reading from address 0x08", $time {0 0 0};
    %pushi/vec4 8, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %wait E_0x65420a6daaf0;
    %wait E_0x65420a6daaf0;
    %vpi_call/w 3 60 "$display", "  Read from addr %h. Got instruction: %h. Expected: DEADBEEF", v0x65420a6d4240_0, v0x65420a6d4060_0 {0 0 0};
    %load/vec4 v0x65420a6d4060_0;
    %cmpi/ne 3735928559, 0, 32;
    %jmp/0xz  T_3.4, 6;
    %vpi_call/w 3 61 "$error", "FAIL: Address 0x08 mismatch." {0 0 0};
    %jmp T_3.5;
T_3.4 ;
    %vpi_call/w 3 62 "$display", "PASS: Address 0x08 correct." {0 0 0};
T_3.5 ;
    %vpi_call/w 3 63 "$display", "------------------------------------" {0 0 0};
    %vpi_call/w 3 66 "$display", "[%0t ns] Test: Reading from address 0x10", $time {0 0 0};
    %pushi/vec4 16, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %wait E_0x65420a6daaf0;
    %wait E_0x65420a6daaf0;
    %vpi_call/w 3 71 "$display", "  Read from addr %h. Got instruction: %h. Expected: FFFFFFFF", v0x65420a6d4240_0, v0x65420a6d4060_0 {0 0 0};
    %load/vec4 v0x65420a6d4060_0;
    %cmpi/ne 4294967295, 0, 32;
    %jmp/0xz  T_3.6, 6;
    %vpi_call/w 3 72 "$error", "FAIL: Address 0x10 mismatch." {0 0 0};
    %jmp T_3.7;
T_3.6 ;
    %vpi_call/w 3 73 "$display", "PASS: Address 0x10 correct." {0 0 0};
T_3.7 ;
    %vpi_call/w 3 74 "$display", "------------------------------------" {0 0 0};
    %vpi_call/w 3 77 "$display", "[%0t ns] Test: Reading consecutively from 0x04 then 0x0C", $time {0 0 0};
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %wait E_0x65420a6daaf0;
    %wait E_0x65420a6daaf0;
    %vpi_call/w 3 82 "$display", "  Read from addr 0x04. Got instruction: %h. Expected: ABCDEF01", v0x65420a6d4060_0 {0 0 0};
    %load/vec4 v0x65420a6d4060_0;
    %cmpi/ne 2882400001, 0, 32;
    %jmp/0xz  T_3.8, 6;
    %vpi_call/w 3 83 "$error", "FAIL: Address 0x04 mismatch." {0 0 0};
T_3.8 ;
    %pushi/vec4 12, 0, 32;
    %store/vec4 v0x65420a6d4240_0, 0, 32;
    %wait E_0x65420a6daaf0;
    %wait E_0x65420a6daaf0;
    %vpi_call/w 3 90 "$display", "  Read from addr 0x0C. Got instruction: %h. Expected: 00000000", v0x65420a6d4060_0 {0 0 0};
    %load/vec4 v0x65420a6d4060_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.10, 6;
    %vpi_call/w 3 91 "$error", "FAIL: Address 0x0C mismatch." {0 0 0};
    %jmp T_3.11;
T_3.10 ;
    %vpi_call/w 3 92 "$display", "PASS: Consecutive reads correct." {0 0 0};
T_3.11 ;
    %vpi_call/w 3 93 "$display", "------------------------------------" {0 0 0};
    %vpi_call/w 3 96 "$display", "========================================" {0 0 0};
    %vpi_call/w 3 97 "$display", "Instruction Memory Testbench Finished." {0 0 0};
    %vpi_call/w 3 98 "$finish" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "/home/shahriar-rizvi/Work/VLSI/SigmaCore/SigmaCore-RISC-V-CPU-Design/RTL/Memory/imem_tb.sv";
    "/home/shahriar-rizvi/Work/VLSI/SigmaCore/SigmaCore-RISC-V-CPU-Design/RTL/Memory/instruction_memory.sv";
